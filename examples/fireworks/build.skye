import "build";
import "std/collections";

use core::compiler::Checks;
use core::compiler::TARGET_OS;
use core::compiler::TargetOS;

fn main(args: Array[String]) !void {
    let conf = build::Conf::default();
    
    if args.contains("release") {
        conf.checks = Checks::Release;
    }

    let buf = Array::new[char]();
    defer buf.free();

    @format(&buf, "src%main.skye", std::os::@SEPARATOR);
    
    if args.contains("emit-c") {
        try build::compileSkyeToC(buf.asString(), "fireworks.c", conf);
        return (!void)::Ok;
    } 

    const windows = @TARGET_OS == TargetOS::Windows;
    const output = windows ? "fireworks.exe" : "fireworks";
    try build::compileSkye(buf.asString(), output, conf);

    if args.contains("run") {
        if windows {
            try build::system(".\fireworks.exe");
        } else {
            try build::system("./fireworks");
        }

        let _ = build::removeFile(output);
    }

    return (!void)::Ok;
}
